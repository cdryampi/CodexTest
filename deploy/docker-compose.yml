version: "3.9"

services:
  postgres:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      backend_net:
        aliases:
          - postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  backend:
    build:
      context: ..
      dockerfile: deploy/backend/Dockerfile
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      # Variables estándar de Django
      SECRET_KEY: "${SECRET_KEY:-}"
      DEBUG: "${DEBUG:-False}"
      SECURE_SSL_REDIRECT: "${SECURE_SSL_REDIRECT:-True}"
      ALLOWED_HOSTS: "${ALLOWED_HOSTS:-}"
      CSRF_TRUSTED_ORIGINS: "${CSRF_TRUSTED_ORIGINS:-}"
      CORS_ALLOWED_ORIGINS: "${CORS_ALLOWED_ORIGINS:-}"
      DATABASE_URL: "${DATABASE_URL:-$${{project.DATABASE_URL}}}"
      OPENAI_API_KEY: "${OPENAI_API_KEY:-}"
      OPENAI_API_URL: "${OPENAI_API_URL:-}"
      OPENAI_DEFAULT_MODEL: "${OPENAI_DEFAULT_MODEL:-}"
      OPENAI_REQUEST_TIMEOUT: "${OPENAI_REQUEST_TIMEOUT:-}"
      OPENAI_THROTTLE: "${OPENAI_THROTTLE:-}"
      OPENAI_MAX_TEXT_LENGTH: "${OPENAI_MAX_TEXT_LENGTH:-}"

      # Aliases usados por Dokploy
      SECRET: "${SECRET:-}"
      URL: "${URL:-}"
      DJANGO_SECRET_KEY: "${DJANGO_SECRET_KEY:-}"
      DJANGO_DEBUG: "${DJANGO_DEBUG:-}"
      DJANGO_SECURE_SSL_REDIRECT: "${DJANGO_SECURE_SSL_REDIRECT:-}"
      DJANGO_ALLOWED_HOSTS: "${DJANGO_ALLOWED_HOSTS:-}"
      DJANGO_CSRF_TRUSTED_ORIGINS: "${DJANGO_CSRF_TRUSTED_ORIGINS:-}"
      DJANGO_CORS_ALLOWED_ORIGINS: "${DJANGO_CORS_ALLOWED_ORIGINS:-}"
      DJANGO_DATABASE_URL: "${DJANGO_DATABASE_URL:-$${{project.DATABASE_URL}}}"
      DJANGO_OPENAI_API_KEY: "${DJANGO_OPENAI_API_KEY:-}"
      DJANGO_OPEN_IA_KEY: "${DJANGO_OPEN_IA_KEY:-}"

      # Compatibilidad con despliegues previos
      OPEN_IA_KEY: "${OPEN_IA_KEY:-}"
      VITE_OPEN_IA_KEY: "${VITE_OPEN_IA_KEY:-}"

      # Configuración PostgreSQL (directa y con prefijo Dokploy)
      # En Dokploy define DATABASE_URL=${{project.DATABASE_URL}} para reutilizar la cadena provista por el proyecto
      POSTGRES_DB: "${POSTGRES_DB:-}"
      POSTGRES_USER: "${POSTGRES_USER:-}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:-}"
      POSTGRES_HOST: "${POSTGRES_HOST:-postgres}"
      POSTGRES_PORT: "${POSTGRES_PORT:-5432}"
      DJANGO_POSTGRES_DB: "${DJANGO_POSTGRES_DB:-}"
      DJANGO_POSTGRES_USER: "${DJANGO_POSTGRES_USER:-}"
      DJANGO_POSTGRES_PASSWORD: "${DJANGO_POSTGRES_PASSWORD:-}"
      DJANGO_POSTGRES_HOST: "${DJANGO_POSTGRES_HOST:-}"
      DJANGO_POSTGRES_PORT: "${DJANGO_POSTGRES_PORT:-}"

      GUNICORN_WORKERS: "${GUNICORN_WORKERS:-3}"
      GUNICORN_THREADS: "${GUNICORN_THREADS:-1}"
      GUNICORN_TIMEOUT: "${GUNICORN_TIMEOUT:-120}"
      DB_MAX_RETRIES: "${DB_MAX_RETRIES:-30}"
      DB_RETRY_DELAY: "${DB_RETRY_DELAY:-1}"
    networks:
      backend_net:
        aliases:
          - backend
    ports:
      - "8001:8000"
    volumes:
      - media:/app/media
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/admin/login/ || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  pgdata:
    name: pgdata
  media:
    name: backend_media

networks:
  backend_net:
    driver: bridge
