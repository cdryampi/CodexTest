version: "3.9"

services:
  postgres:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  backend:
    build:
      context: ..
      dockerfile: deploy/backend.Dockerfile
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SECRET: "${SECRET}"
      DJANGO_DEBUG: "${DJANGO_DEBUG:-False}"
      DJANGO_SECURE_SSL_REDIRECT: "${DJANGO_SECURE_SSL_REDIRECT:-True}"
      DJANGO_ALLOWED_HOSTS: "${DJANGO_ALLOWED_HOSTS:-}"
      DJANGO_CSRF_TRUSTED_ORIGINS: "${DJANGO_CSRF_TRUSTED_ORIGINS:-}"
      DJANGO_CORS_ALLOWED_ORIGINS: "${DJANGO_CORS_ALLOWED_ORIGINS:-}"
      DATABASE_URL: "${DATABASE_URL:-}"
      POSTGRES_DB: "${POSTGRES_DB:-}"
      POSTGRES_USER: "${POSTGRES_USER:-}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:-}"
      POSTGRES_HOST: "${POSTGRES_HOST:-postgres}"
      POSTGRES_PORT: "${POSTGRES_PORT:-5432}"
      GUNICORN_WORKERS: "${GUNICORN_WORKERS:-3}"
    ports:
      - "8001:8000"

volumes:
  pgdata:
    name: pgdata
