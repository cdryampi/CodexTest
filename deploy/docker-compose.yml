version: "3.9"

services:
  postgres:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: ${{project.POSTGRES_DB}}
      POSTGRES_USER: ${{project.POSTGRES_USER}}
      POSTGRES_PASSWORD: ${{project.POSTGRES_PASSWORD}}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      backend_net:
        aliases: [postgres]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  backend:
    build:
      context: ..
      dockerfile: deploy/backend/Dockerfile
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      # Django (nombres que lees en settings.py con os.getenv)
      SECRET: ${{project.SECRET}}
      DJANGO_DEBUG: ${{project.DJANGO_DEBUG}}
      DJANGO_SECURE_SSL_REDIRECT: ${{project.DJANGO_SECURE_SSL_REDIRECT}}
      DJANGO_ALLOWED_HOSTS: ${{project.DJANGO_ALLOWED_HOSTS}}
      DJANGO_CSRF_TRUSTED_ORIGINS: ${{project.DJANGO_CSRF_TRUSTED_ORIGINS}}
      DJANGO_CORS_ALLOWED_ORIGINS: ${{project.DJANGO_CORS_ALLOWED_ORIGINS}}

      # Base de datos (elige una de dos: URL o campos sueltos)
      DATABASE_URL: ${{project.DATABASE_URL}}
      POSTGRES_DB: ${{project.POSTGRES_DB}}
      POSTGRES_USER: ${{project.POSTGRES_USER}}
      POSTGRES_PASSWORD: ${{project.POSTGRES_PASSWORD}}
      POSTGRES_HOST: postgres
      POSTGRES_PORT: "5432"

      # Claves extra (si las usas)
      OPENAI_API_KEY: ${{project.OPENAI_API_KEY}}
      OPEN_IA_KEY: ${{project.OPEN_IA_KEY}}

      # Tuning opcional
      GUNICORN_WORKERS: "3"
      GUNICORN_THREADS: "1"
      GUNICORN_TIMEOUT: "120"
      DB_MAX_RETRIES: "30"
      DB_RETRY_DELAY: "1"
    networks:
      backend_net:
        aliases: [backend]
    ports:
      - "8001:8000"
    volumes:
      - media:/app/media
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/admin/login/ || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  pgdata:
    name: pgdata
  media:
    name: backend_media

networks:
  backend_net:
    driver: bridge
